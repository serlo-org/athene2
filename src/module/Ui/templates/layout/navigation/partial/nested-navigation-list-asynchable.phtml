<?php
/**
 * Athene2 - Advanced Learning Resources Manager
 *
 * @author      Julian Kempff (julian.kempff@serlo.org)
 * @license     MIT License
 * @license     http://opensource.org/licenses/MIT The MIT License (MIT)
 * @link        https://github.com/serlo-org/athene2 for the canonical source repository
 * @copyright   Copyright (c) 2013 Gesellschaft fÃ¼r freie Bildung e.V. (http://www.open-education.eu/)
 */

$html = array();
$useBreadCrumbs = true;
$depth = $this->depth ? : 1;
$maxDepth = $this->navigation()->menu()->getMaxDepth();
$siblingIsActive = false;

foreach ($this->pages as $page) {
    $siblingIsActive = $siblingIsActive || $page->isActive();
}

foreach ($this->pages as $page) {
    $liClasses = [];
    $recActive = $page->isActive(true);

    // check whether given link is a community link
    if (!is_null($page->get('community'))) {
        if (is_bool($page->get('community')) ? $page->get('community') : ($page->get('community') === 'true')) {
            $liClasses[] = 'is-community';
        }
    }

    // visibility of the sub-page
    if (!$page->isVisible() || !($depth <= $maxDepth || $recActive || $siblingIsActive)
        || !$this->navigation()->accept(
            $page
        )
    ) {
        continue;
    }

    if ($page->getLabel() == 'divider') {
        $html[] = '<li class="divider"></li>';
        continue;
    }

    if ($recActive) {
        $liClasses[] = 'active';
    }

    $elements = '';
    if ($page->get('elements') !== null) {
        $elements = ' data-element-count="' . $page->get('elements') . '"';
    }

    $breadcrumb = ($recActive && $useBreadCrumbs) ? 'itemscope itemtype="http://data-vocabulary.org/Breadcrumb"' : false;
    $child      = $breadcrumb ? 'itemprop="child"' : '';
    $rich       = $breadcrumb ? ' ' . $child . ' ' . $breadcrumb . ' ' : '';
    $needsFetching = ($depth >= $maxDepth - 1 && !empty($page->pages)) ? ' data-needs-fetching="true" ' : '';

    $html[] = '<li' . $needsFetching . $rich . $elements . (count($liClasses) ? (' class="' . implode(' ', $liClasses) . '"') : '') . ' data-identifier="' . $page->get('identifier') . '">';

    $html[] = '<a href="' . $this->alias($page->getHref()) . '"' . ($breadcrumb ? ' itemprop="url"' : '') . '>';

    if ($breadcrumb) {
        $html[] = '<span itemprop="title">' . $page->getLabel() . '</span>';
    } else {
        $html[] = '<span>' . $page->getLabel() . '</span>';
    }
    $html[] = "</a>";

    if (!empty($page->pages)) {
        $html[] = '<ul>';
        $html[] = $this->partial(
            'layout/navigation/partial/nested-navigation-list-asynchable',
            array('pages' => $page->pages, 'depth' => $depth + 1)
        );;
        $html[] = '</ul>';
    }

    $html[] = "</li>";
}

echo join(' ', $html);
