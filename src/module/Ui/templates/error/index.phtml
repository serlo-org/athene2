<?php
/**
 * This file is part of Athene2.
 *
 * Copyright (c) 2013-2019 Serlo Education e.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @copyright Copyright (c) 2013-2019 Serlo Education e.V.
 * @license   http://www.apache.org/licenses/LICENSE-2.0 Apache License 2.0
 * @link      https://github.com/serlo-org/athene2 for the canonical source repository
 */
?>
<?php echo $this->pageHeader('A fatal error occurred'); ?>

    <p><?php echo $this->translate('While we\'re resolving this issue, please enjoy the video.'); ?></p>

<iframe width="700" height="394" src="//www.youtube-nocookie.com/embed/09m0B8RRiEE?rel=0" frameborder="0" allowfullscreen></iframe>

<hr/>

<?php ob_start(); ?>

<?php if(isset($this->exception) && $this->exception instanceof Exception): ?>
<div class="well">
<h2><?php echo $this->translate('Additional information'); ?>:</h2>
<h3><?php echo get_class($this->exception); ?></h3>
<dl>
    <dt><?php echo $this->translate('File'); ?>:</dt>
    <dd>
        <pre class="prettyprint linenums"><?php echo $this->exception->getFile(); ?>:<?php echo $this->exception->getLine(); ?></pre>
    </dd>
    <dt><?php echo $this->translate('Message'); ?>:</dt>
    <dd>
        <pre class="prettyprint linenums"><?php echo $this->exception->getMessage(); ?></pre>
    </dd>
    <dt><?php echo $this->translate('Stack trace'); ?>:</dt>
    <dd>
        <pre class="prettyprint linenums"><?php echo $this->exception->getTraceAsString(); ?></pre>
    </dd>
</dl>
<?php
    $e = $this->exception->getPrevious();
    if ($e) :
?>
<hr/>
<h2><?php echo $this->translate('Previous exceptions'); ?>:</h2>
<ul class="unstyled">
    <?php while($e) : ?>
    <li>
        <h3><?php echo get_class($e); ?></h3>
        <dl>
            <dt><?php echo $this->translate('File'); ?>:</dt>
            <dd>
                <pre class="prettyprint linenums"><?php echo $e->getFile(); ?>:<?php echo $e->getLine(); ?></pre>
            </dd>
            <dt><?php echo $this->translate('Message'); ?>:</dt>
            <dd>
                <pre class="prettyprint linenums"><?php echo $e->getMessage(); ?></pre>
            </dd>
            <dt><?php echo $this->translate('Stack trace'); ?>:</dt>
            <dd>
                <pre class="prettyprint linenums"><?php echo $e->getTraceAsString(); ?></pre>
            </dd>
        </dl>
    </li>
    <?php
        $e = $e->getPrevious();
        endwhile;
    ?>
</ul>
<?php endif; ?>

<?php else: ?>

<h3><?php echo $this->translate('No Exception available'); ?></h3>

</div>

<?php endif ?>

<?php

$output = ob_get_contents();

ob_end_clean();

if (isset($this->display_exceptions) && $this->display_exceptions){
    echo $output;
} else {
    echo '<p>'.$this->translate('Read the following, if you\'re really good with computers:').'</p>';
    echo '<textarea rows="50" class="form-control">';
    echo $this->encrypt($output);
    echo '</textarea>';
}
