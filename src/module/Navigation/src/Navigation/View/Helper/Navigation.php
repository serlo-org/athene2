<?php
/**
 * Athene2 - Advanced Learning Resources Manager
 *
 * @author    Aeneas Rekkas (aeneas.rekkas@serlo.org)
 * @license   http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0
 * @link      https://github.com/serlo-org/athene2 for the canonical source repository
 * @copyright Copyright (c) 2013-2014 Gesellschaft fÃ¼r freie Bildung e.V. (http://www.open-education.eu/)
 */
namespace Navigation\View\Helper;

use Zend\Cache\Storage\StorageInterface;
use Zend\Navigation\AbstractContainer;
use Zend\ServiceManager\ServiceLocatorAwareInterface;
use Zend\View\Helper\Navigation\AbstractHelper;

class Navigation extends \Zend\View\Helper\Navigation
{
    protected $storage;

    public function __construct(StorageInterface $storage)
    {
        $this->storage = $storage;
    }

    public function render($container = null)
    {
        $container = $container ? $container : $this->getContainer();
        $output    = parent::render($container);
        return $output;
    }


    public function __call($method, array $arguments = array())
    {
        return parent::__call($method, $arguments); // TODO: Change the autogenerated stub
    }

    public function checkIdentity($page) {
        if (!is_null($page->get('needsIdentity'))) {
            // convert value of key 'needsIdentity' to boolean if necessary
            $needsIdentity = is_bool($page->get('needsIdentity')) ? $page->get('needsIdentity') : ($page->get('needsIdentity') === 'true');

            // check if current user is anonymous and compare to 'needsIdentity' value
            return $this->getView()->isGranted('login') === $needsIdentity;
        }
        return true;
    }
}
